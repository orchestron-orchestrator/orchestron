# WARNING WARNING WARNING WARNING WARNING
# DO NOT MODIFY THIS FILE!! This file is generated!
# WARNING WARNING WARNING WARNING WARNING

import logging
import xml
import orchestron.ttt as ttt
import yang.adata
import yang.gdata

from respnet.layers.y_0 import foo__c1__foo__bar_entry
from respnet.layers.y_0 import from_xml_gen3 as from_xml
from respnet.layers.y_1_loose import root as output_root

def o_root():
    return output_root()


class Foobar(ttt.TransformFunction):
    transform: mut(foo__c1__foo__bar_entry) -> yang.adata.MNode

    @staticmethod
    def input_type():
        """Return the modeled input type for this transform"""
        return foo__c1__foo__bar_entry

    mut def transform_wrapper(self, i: yang.gdata.Node, memory: ?yang.gdata.Node, dynstate: ?yang.gdata.Node) -> (yang.gdata.Node, ?yang.gdata.Node):
        """Wrap the user provided transform method to convert from gdata to
        modeled input and back to gdata
        """
        modeled_input = foo__c1__foo__bar_entry.from_gdata(i)

        return self.transform(modeled_input).to_gdata(), None

    mut def transform_xml(self, i: xml.Node, memory: ?yang.gdata.Node, dynstate: ?yang.gdata.Node) -> (yang.gdata.Node, ?yang.gdata.Node):
        """Wrap the user provided transform method to convert from XML to
        modeled input and return gdata
        """
        gdata_input = from_xml(i, ['c1', 'foo', 'bar'])
        modeled_input = foo__c1__foo__bar_entry.from_gdata(gdata_input)

        return self.transform(modeled_input).to_gdata(), None
